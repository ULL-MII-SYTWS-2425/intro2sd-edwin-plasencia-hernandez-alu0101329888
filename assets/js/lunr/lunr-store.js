var store = [{
        "title": "Lhasa Apso",
        "excerpt":"   The Lhasa Apso (/ˈlɑːsə ˈæpsoʊ/ lah-sə ap-soh) is a non-sporting dog breed originating in Tibet. It was bred as an interior sentinel in the Buddhist monasteries, to alert the monks to any intruders who entered. Lhasa is the capital city of Tibet, and apso is a word in the Tibetan language meaning “bearded”, so, Lhasa Apso simply means “long-haired Lhasa dog”. There are, however, some who claim that the word “apso” is a form of the Tibetan word “rapso”, meaning “goat-like”, which would make the equivalent translation “wooly Lhasa dog”.       From Wikipedia, the free encyclopedia   ","categories": [],
        "tags": [],
        "url": "/intro2sd-edwin-plasencia-hernandez-alu0101329888/pets/lhasa-apso/",
        "teaser": null
      },{
        "title": "Tabby",
        "excerpt":"   A tabby is any domestic cat that has a coat featuring distinctive stripes, dots, lines or swirling patterns, usually together with a mark resembling an ‘M’ on its forehead. Tabbies are sometimes erroneously assumed to be a cat breed. In fact, the tabby pattern is found in many breeds, as well as among the general mixed-breed population. The tabby pattern is a naturally occurring feature that may be related to the coloration of the domestic cat’s direct ancestor, the African wildcat, which (along with the European wildcat and Asiatic wildcat) has a similar coloration.       From Wikipedia, the free encyclopedia   ","categories": [],
        "tags": [],
        "url": "/intro2sd-edwin-plasencia-hernandez-alu0101329888/pets/tabby/",
        "teaser": null
      },{
        "title": "Baz Boom Identity",
        "excerpt":"Pictures of Goats section West Seattle Blog dingbat newspaper rubber cement Google+ newsroom cafe news.me rubber cement, Ushahidi Kindle Single syndicated Instagram HuffPo community mthomps, Mozilla iPhone app should isn’t a business model curmudgeon Snarkmarket Tim Carmody production of innocence. Fuego tweets community DocumentCloud metered model Gardening &amp; War section YouTube social media SEO information overload analytics Aron Pilhofer Journal Register data visualization WikiLeaks Groupon, collaboration Steve Jobs we need a Nate Silver AP What Would Google Do the power of the press belongs to the person who owns one Clay Shirky curmudgeon Voice of San Diego free as in beer dead trees the notion of the public Lucius Nieman.                                                                                                                                This is a sample gallery to go along with this case study.       hackgate copyright Lucius Nieman CNN leaves it there right-sizing a giant stack of newspapers that you’ll never read net neutrality algorithms RT algorithms TechCrunch 5% corruption, horse-race coverage Gardening &amp; War section CTR try PR CPC David Cohn shoot a photo algorithms content is king Android Snarkmarket crowdfunding, Fuego Twitter topples dictators YouTube abundance WordPress Reuters try PR stupid commenters should isn’t a business model bringing a tote bag to a knife fight.  ","categories": [],
        "tags": [],
        "url": "/intro2sd-edwin-plasencia-hernandez-alu0101329888/portfolio/baz-boom-identity/",
        "teaser": "/intro2sd-edwin-plasencia-hernandez-alu0101329888/assets/images/unsplash-gallery-image-1-th.jpg"
      },{
        "title": "Fizz Bang Identity",
        "excerpt":"Pictures of Goats section West Seattle Blog dingbat newspaper rubber cement Google+ newsroom cafe news.me rubber cement, Ushahidi Kindle Single syndicated Instagram HuffPo community mthomps, Mozilla iPhone app should isn’t a business model curmudgeon Snarkmarket Tim Carmody production of innocence. Fuego tweets community DocumentCloud metered model Gardening &amp; War section YouTube social media SEO information overload analytics Aron Pilhofer Journal Register data visualization WikiLeaks Groupon, collaboration Steve Jobs we need a Nate Silver AP What Would Google Do the power of the press belongs to the person who owns one Clay Shirky curmudgeon Voice of San Diego free as in beer dead trees the notion of the public Lucius Nieman.                                                                                                                                This is a sample gallery to go along with this case study.       hackgate copyright Lucius Nieman CNN leaves it there right-sizing a giant stack of newspapers that you’ll never read net neutrality algorithms RT algorithms TechCrunch 5% corruption, horse-race coverage Gardening &amp; War section CTR try PR CPC David Cohn shoot a photo algorithms content is king Android Snarkmarket crowdfunding, Fuego Twitter topples dictators YouTube abundance WordPress Reuters try PR stupid commenters should isn’t a business model bringing a tote bag to a knife fight.  ","categories": [],
        "tags": [],
        "url": "/intro2sd-edwin-plasencia-hernandez-alu0101329888/portfolio/fizz-bang-identity/",
        "teaser": "/intro2sd-edwin-plasencia-hernandez-alu0101329888/assets/images/unsplash-gallery-image-2-th.jpg"
      },{
        "title": "Foo Bar Identity",
        "excerpt":"Pictures of Goats section West Seattle Blog dingbat newspaper rubber cement Google+ newsroom cafe news.me rubber cement, Ushahidi Kindle Single syndicated Instagram HuffPo community mthomps, Mozilla iPhone app should isn’t a business model curmudgeon Snarkmarket Tim Carmody production of innocence. Fuego tweets community DocumentCloud metered model Gardening &amp; War section YouTube social media SEO information overload analytics Aron Pilhofer Journal Register data visualization WikiLeaks Groupon, collaboration Steve Jobs we need a Nate Silver AP What Would Google Do the power of the press belongs to the person who owns one Clay Shirky curmudgeon Voice of San Diego free as in beer dead trees the notion of the public Lucius Nieman.                                                                                                                                This is a sample gallery to go along with this case study.       hackgate copyright Lucius Nieman CNN leaves it there right-sizing a giant stack of newspapers that you’ll never read net neutrality algorithms RT algorithms TechCrunch 5% corruption, horse-race coverage Gardening &amp; War section CTR try PR CPC David Cohn shoot a photo algorithms content is king Android Snarkmarket crowdfunding, Fuego Twitter topples dictators YouTube abundance WordPress Reuters try PR stupid commenters should isn’t a business model bringing a tote bag to a knife fight.  ","categories": [],
        "tags": [],
        "url": "/intro2sd-edwin-plasencia-hernandez-alu0101329888/portfolio/foo-bar-website/",
        "teaser": "/intro2sd-edwin-plasencia-hernandez-alu0101329888/assets/images/foo-bar-identity-th.jpg"
      },{
        "title": "Ginger Gulp Identity",
        "excerpt":"Pictures of Goats section West Seattle Blog dingbat newspaper rubber cement Google+ newsroom cafe news.me rubber cement, Ushahidi Kindle Single syndicated Instagram HuffPo community mthomps, Mozilla iPhone app should isn’t a business model curmudgeon Snarkmarket Tim Carmody production of innocence. Fuego tweets community DocumentCloud metered model Gardening &amp; War section YouTube social media SEO information overload analytics Aron Pilhofer Journal Register data visualization WikiLeaks Groupon, collaboration Steve Jobs we need a Nate Silver AP What Would Google Do the power of the press belongs to the person who owns one Clay Shirky curmudgeon Voice of San Diego free as in beer dead trees the notion of the public Lucius Nieman.                                                                                                                                This is a sample gallery to go along with this case study.       hackgate copyright Lucius Nieman CNN leaves it there right-sizing a giant stack of newspapers that you’ll never read net neutrality algorithms RT algorithms TechCrunch 5% corruption, horse-race coverage Gardening &amp; War section CTR try PR CPC David Cohn shoot a photo algorithms content is king Android Snarkmarket crowdfunding, Fuego Twitter topples dictators YouTube abundance WordPress Reuters try PR stupid commenters should isn’t a business model bringing a tote bag to a knife fight.  ","categories": [],
        "tags": [],
        "url": "/intro2sd-edwin-plasencia-hernandez-alu0101329888/portfolio/ginger-gulp-identity/",
        "teaser": "/intro2sd-edwin-plasencia-hernandez-alu0101329888/assets/images/unsplash-gallery-image-3-th.jpg"
      },{
        "title": "Informe",
        "excerpt":"green           Sabrosa apple            Sabrosa orange            Sabrosa watermelon       Systems development is the process of taking a set of business requirements and, through a series of structured stages, translating these into an operational IT system.   The stages vary according to the development approach being used – described more fully in Chapter 2, ‘Lifecycle types and their rationales’ – but typically would include the activities shown in Figure 1.1, including: a feasibility study, to see if the project is worthwhile ; requirements engineering to analyse the business need and specify the users’ requirements ; design of the system to meet the users’ needs ; development of the software needed to meet the requirements ; testing of the software ; implementation of the solution. Ahmed, Tahir, et al. Developing Information Systems : Practical guidance for IT professionals, edited by James Cadle, BCS Learning &amp; Development Limited, 2014. ProQuest Ebook Central, http://ebookcentral.proquest.com/lib/bull-ebooks/detail.action?docID=1713962.   ","categories": ["Post Formats"],
        "tags": ["Post Formats","readability","standard"],
        "url": "/intro2sd-edwin-plasencia-hernandez-alu0101329888/post%20formats/informe/",
        "teaser": null
      },{
        "title": "Resumen",
        "excerpt":"El capítulo 1 del libro ‘Developing Information Systems : Practical Guidance for IT Professionals’ comenta el objetivo de los sistemas de desarrollo, así como el alcance de los mismos, la relación entre ellos y otras disciplinas en las que se puede aplicar y cómo el offshoring y el outsourcing afectan a los sistemas de desarrollo.   Los sistemas de desarrollo son el proceso que recoge una serie de requisitos empresariales y, tras una serie de fases estructuradas, la traduce a un sistema operativo informático.   Estas etapas incluyen:      Estudio de viabilidad: Evalúa si el proyecto es viable.   Ingeniería de requisitos: Analiza necesidades empresariales y especifica requisitos de usuarios.   Diseño del sistema: Crea un diseño que satisfaga las necesidades del usuario.   Desarrollo de software: Construye el software necesario.   Pruebas: Verifica el correcto funcionamiento del software.   Implementación: Despliega la solución final.   A su vez, la relación con otras disciplinas en las que se pueden aplicar incluyen:      Gestión de proyectos: Coordina recursos, asegura compromiso de los interesados y permite que el equipo técnico se enfoque en su labor.   Análisis de negocios: Identifica problemas u oportunidades en el negocio y formula soluciones integrales, usualmente relacionadas con TI.   Arquitectura de sistemas: Diseña la arquitectura para coordinar sistemas y permitir su expansión.   Pruebas: Identifican defectos en el software mediante un proceso iterativo; aunque nunca garantizan software 100% libre de errores.   Gestión de configuración y control de cambios: Administra componentes del sistema y cambios en forma controlada.   Control y garantía de calidad: Inspecciona y asegura que los productos cumplen con estándares de calidad.   Gestión de servicios: Administra y mantiene servicios de TI, como infraestructura y aplicaciones.   Por último, el offshoring y el outsourcing son estrategias utilizadas por las organizaciones para gestionar el desarrollo de sistemas. El offshoring consiste en trasladar el trabajo de desarrollo a equipos en otros países, generalmente para aprovechar recursos de alta calidad a menor costo. Sin embargo, esto puede generar retos como diferencias culturales, de idioma o retrasos en la comunicación. Por otro lado, el outsourcing implica delegar el desarrollo o la gestión de sistemas de TI a empresas especializadas. Esto puede abarcar desde tareas específicas hasta la administración completa de los sistemas. A menudo se busca reducir costos, controlar presupuestos o transferir riesgos, aunque también puede implicar pérdida de control sobre sistemas clave y del conocimiento crítico de los mismos ya que pasa al proveedor.   Test: Leyendo desde un json. works   Otros resúmenes:   Resumen - Resumen sobre el capítulo   Resumen 2 - Resumen sobre el capítulo 2  ","categories": [],
        "tags": ["Development systems","introduction"],
        "url": "/intro2sd-edwin-plasencia-hernandez-alu0101329888/resumen/",
        "teaser": null
      },{
        "title": "Resumen 2",
        "excerpt":"El capítulo 2 del libro Developing Information Systems de James Cadle se titula “Tipos de Ciclos de Vida y sus Racionales”. El capítulo comenta diversos enfoques para el desarrollo de sistemas de información, analizando las características, ventajas y desventajas de cada tipo de ciclo de vida.   Los principales tipos de ciclos de vida abordados incluyen:      Ciclo de Vida en Cascada: Un enfoque secuencial donde cada fase debe completarse antes de pasar a la siguiente. Es adecuado para proyectos con requisitos bien definidos desde el inicio, pero puede ser rígido ante cambios posteriores.   Desarrollo Incremental: Consiste en construir el sistema en pequeñas partes funcionales llamadas incrementos. Cada incremento añade funcionalidad adicional, permitiendo retroalimentación temprana y ajustes durante el proceso.   Desarrollo Evolutivo: Se centra en la creación de prototipos que evolucionan basándose en la retroalimentación continua del usuario. Es útil en proyectos donde los requisitos no están completamente claros desde el principio.   Desarrollo en Espiral: Combina elementos del modelo en cascada y del desarrollo evolutivo, enfatizando la evaluación de riesgos y la iteración constante. Es especialmente útil para proyectos complejos y de gran escala.   El capítulo también discute cómo seleccionar el ciclo de vida más adecuado según las características del proyecto, teniendo en cuenta factores como los requisitos, el nivel de riesgo, la necesidad de retroalimentación del usuario y las restricciones de tiempo y presupuesto.   Otros resúmenes:   Resumen - Resumen sobre el capítulo   Resumen 2 - Resumen sobre el capítulo 2  ","categories": [],
        "tags": ["Development systems","introduction"],
        "url": "/intro2sd-edwin-plasencia-hernandez-alu0101329888/resumen2/",
        "teaser": null
      },{
        "title": "Chocolate Chip Cookies",
        "excerpt":"A chocolate chip cookie is a drop cookie that originated in the United States and features chocolate chips as its distinguishing ingredient.   The traditional recipe combines a dough composed of butter and both brown and white sugar with semi-sweet chocolate chips. Variations include recipes with other types of chocolate as well as additional ingredients such as nuts or oatmeal.   This recipe makes 4 dozen cookies.   Ingredients      2 1/4 cups all-purpose flour   1 teaspoon baking soda   1/2 teaspoon salt   1 cup butter, softened and cut to pieces   1 cup sugar   1 cup light brown sugar, packed   2 teaspoons vanilla extract   2 large eggs   2 cups semi-sweet chocolate chips   1/2 teaspoon nutmeg (optional)   1 cup chopped pecans or walnuts (optional)   Directions      Preheat the oven to 350 F.   In a medium bowl, whisk flour with baking soda, nutmeg and salt.   In a large bowl, beat butter with sugar and brown sugar until creamy and light. Add vanilla and eggs, one at a time, and mix until incorporated.   Gradually add dry mixture into the butter-sugar wet blend, mixing with a spatula until combined. Add chocolate chips and nuts until just mixed.   Drop tablespoon-sized clumps onto un-greased cookie sheets. Bake for 8-12 minutes, or until pale brown. Allow to cool on the pan for a minute or three, then transfer cookies to a wire rack to finish cooling.  ","categories": [],
        "tags": [],
        "url": "/intro2sd-edwin-plasencia-hernandez-alu0101329888/recipes/chocolate-chip-cookies/",
        "teaser": null
      },{
        "title": "Oatmeal Cookies",
        "excerpt":"Oatmeal cookies are a proverbial favorite with both kids and adults. This crisp and chewy cookie is loaded with oats, dried fruit, and chopped nuts.   Ingredients      1 cup butter, softened 1 cup white sugar   1 cup packed brown sugar   2 eggs   1 teaspoon vanilla extract   2 cups all-purpose flour   1 teaspoon baking soda   1 teaspoon salt   1 1/2 teaspoons ground cinnamon   3 cups quick cooking oats   Directions      In a medium bowl, cream together butter, white sugar, and brown sugar. Beat in eggs one at a time, then stir in vanilla. Combine flour, baking soda, salt, and cinnamon; stir into the creamed mixture. Mix in oats. Cover, and chill dough for at least one hour.   Preheat the oven to 375 degrees F (190 degrees C). Grease cookie sheets. Roll the dough into walnut sized balls, and place 2 inches apart on cookie sheets. Flatten each cookie with a large fork dipped in sugar.   Bake for 8 to 10 minutes in preheated oven. Allow cookies to cool on baking sheet for 5 minutes before transferring to a wire rack to cool completely.  ","categories": [],
        "tags": [],
        "url": "/intro2sd-edwin-plasencia-hernandez-alu0101329888/recipes/oatmeal-cookies/",
        "teaser": null
      },{
        "title": "Peanut Butter Cookies",
        "excerpt":"A peanut butter cookie is a type of cookie that is distinguished for having peanut butter as a principal ingredient. The cookie generally originated in the United States, its development dating back to the 1910s.   Ingredients      1 cup unsalted butter   1 cup crunchy peanut butter   1 cup white sugar   1 cup packed brown sugar   2 eggs 2   1/2 cups all-purpose flour   1 teaspoon baking powder   1/2 teaspoon salt   1 1/2 teaspoons baking soda   Directions      Cream butter, peanut butter, and sugars together in a bowl; beat in eggs.   In a separate bowl, sift flour, baking powder, baking soda, and salt; stir into butter mixture. Put dough in refrigerator for 1 hour.   Roll dough into 1 inch balls and put on baking sheets. Flatten each ball with a fork, making a crisscross pattern. Bake in a preheated 375 degrees F oven for about 10 minutes or until cookies begin to brown.  ","categories": [],
        "tags": [],
        "url": "/intro2sd-edwin-plasencia-hernandez-alu0101329888/recipes/peanut-butter-cookies/",
        "teaser": null
      },{
        "title": "Resumen",
        "excerpt":"El capítulo 1 del libro ‘Developing Information Systems : Practical Guidance for IT Professionals’ comenta el objetivo de los sistemas de desarrollo, así como el alcance de los mismos, la relación entre ellos y otras disciplinas en las que se puede aplicar y cómo el offshoring y el outsourcing afectan a los sistemas de desarrollo.   Los sistemas de desarrollo son el proceso que recoge una serie de requisitos empresariales y, tras una serie de fases estructuradas, la traduce a un sistema operativo informático.   Estas etapas incluyen:      Estudio de viabilidad: Evalúa si el proyecto es viable.   Ingeniería de requisitos: Analiza necesidades empresariales y especifica requisitos de usuarios.   Diseño del sistema: Crea un diseño que satisfaga las necesidades del usuario.   Desarrollo de software: Construye el software necesario.   Pruebas: Verifica el correcto funcionamiento del software.   Implementación: Despliega la solución final.   A su vez, la relación con otras disciplinas en las que se pueden aplicar incluyen:      Gestión de proyectos: Coordina recursos, asegura compromiso de los interesados y permite que el equipo técnico se enfoque en su labor.   Análisis de negocios: Identifica problemas u oportunidades en el negocio y formula soluciones integrales, usualmente relacionadas con TI.   Arquitectura de sistemas: Diseña la arquitectura para coordinar sistemas y permitir su expansión.   Pruebas: Identifican defectos en el software mediante un proceso iterativo; aunque nunca garantizan software 100% libre de errores.   Gestión de configuración y control de cambios: Administra componentes del sistema y cambios en forma controlada.   Control y garantía de calidad: Inspecciona y asegura que los productos cumplen con estándares de calidad.   Gestión de servicios: Administra y mantiene servicios de TI, como infraestructura y aplicaciones.   Por último, el offshoring y el outsourcing son estrategias utilizadas por las organizaciones para gestionar el desarrollo de sistemas. El offshoring consiste en trasladar el trabajo de desarrollo a equipos en otros países, generalmente para aprovechar recursos de alta calidad a menor costo. Sin embargo, esto puede generar retos como diferencias culturales, de idioma o retrasos en la comunicación. Por otro lado, el outsourcing implica delegar el desarrollo o la gestión de sistemas de TI a empresas especializadas. Esto puede abarcar desde tareas específicas hasta la administración completa de los sistemas. A menudo se busca reducir costos, controlar presupuestos o transferir riesgos, aunque también puede implicar pérdida de control sobre sistemas clave y del conocimiento crítico de los mismos ya que pasa al proveedor.   Test: Leyendo desde un json. works   Otros resúmenes:   Resumen - Resumen sobre el capítulo   Resumen 2 - Resumen sobre el capítulo 2   ","categories": [],
        "tags": ["Development systems","introduction"],
        "url": "/intro2sd-edwin-plasencia-hernandez-alu0101329888/summaries/test/",
        "teaser": null
      },{
        "title": "Resumen 2",
        "excerpt":"El capítulo 2 del libro Developing Information Systems de James Cadle se titula “Tipos de Ciclos de Vida y sus Racionales”. El capítulo comenta diversos enfoques para el desarrollo de sistemas de información, analizando las características, ventajas y desventajas de cada tipo de ciclo de vida.   Los principales tipos de ciclos de vida abordados incluyen:      Ciclo de Vida en Cascada: Un enfoque secuencial donde cada fase debe completarse antes de pasar a la siguiente. Es adecuado para proyectos con requisitos bien definidos desde el inicio, pero puede ser rígido ante cambios posteriores.   Desarrollo Incremental: Consiste en construir el sistema en pequeñas partes funcionales llamadas incrementos. Cada incremento añade funcionalidad adicional, permitiendo retroalimentación temprana y ajustes durante el proceso.   Desarrollo Evolutivo: Se centra en la creación de prototipos que evolucionan basándose en la retroalimentación continua del usuario. Es útil en proyectos donde los requisitos no están completamente claros desde el principio.   Desarrollo en Espiral: Combina elementos del modelo en cascada y del desarrollo evolutivo, enfatizando la evaluación de riesgos y la iteración constante. Es especialmente útil para proyectos complejos y de gran escala.   El capítulo también discute cómo seleccionar el ciclo de vida más adecuado según las características del proyecto, teniendo en cuenta factores como los requisitos, el nivel de riesgo, la necesidad de retroalimentación del usuario y las restricciones de tiempo y presupuesto.   Otros resúmenes:   Resumen - Resumen sobre el capítulo   Resumen 2 - Resumen sobre el capítulo 2  ","categories": [],
        "tags": ["Development systems","introduction"],
        "url": "/intro2sd-edwin-plasencia-hernandez-alu0101329888/summaries/test2/",
        "teaser": null
      }]
